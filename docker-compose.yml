version: "3.8"
services:
  redis:
    image: redis:latest
    container_name: redis-node-1
    ports:
      - "6379:6379"
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --port 6379
    networks:
      backend:
        aliases:
          - redis-node-1
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  redis2:
    image: redis:latest
    container_name: redis-node-2
    ports:
      - "6382:6379"
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --port 6379
    networks:
      backend:
        aliases:
          - redis-node-2
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  redis3:
    image: redis:latest
    container_name: redis-node-3
    ports:
      - "6383:6379"
    command: redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --port 6379
    networks:
      backend:
        aliases:
          - redis-node-3
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  redis-cluster-setup:
    image: redis:latest
    container_name: redis-cluster-setup
    depends_on:
      - redis
      - redis2
      - redis3
    networks:
      backend:
        aliases:
          - redis-cluster-setup
    entrypoint: sh -c 'sleep 10 && redis-cli --cluster create redis-node-1:6379 redis-node-2:6379 redis-node-3:6379 --cluster-replicas 0 --cluster-yes'

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-service
    ports:
        - "5672:5672"
    networks:
      backend:
        aliases:
          - rabbitmq-service
    healthcheck:
        test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
        interval: 30s
        timeout: 10s
        retries: 5
    restart: unless-stopped


#   nestjs-app:
#     build:
#       context: .
#     container_name: nestjs-app
#     env_file:
#       - .env  # Ensure this path is correct
#     ports:
#       - "3000:3000"
#     volumes:
#       - .:/usr/src/app
#       - /usr/src/app/node_modules
#     depends_on:
#        rabbitmq:
#            condition: service_healthy
#     networks:
#       backend:
#         aliases:
#           - nestjs-app
#     healthcheck:
#       test: curl --fail http://localhost:3000 || exit 1
#       interval: 30s
#       timeout: 10s
#       retries: 3
#     restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx-gateway
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      backend:
        aliases:
          - nginx-gateway
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

networks:
  backend:
    driver: bridge